<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://herbertwxin.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://herbertwxin.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-03-01T18:53:07+00:00</updated><id>https://herbertwxin.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal website for Herbert W. Xin </subtitle><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://herbertwxin.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://herbertwxin.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://herbertwxin.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024[[read-time]] min read We’re introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we’re introducing Gemini 1.5 Flash: a model that’s lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We’re also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5’s 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It’s optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it’s a lighter weight model than 1.5 Pro, it’s highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it’s been trained by 1.5 Pro through a process called “distillation,” where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash’s availability and pricing.Over the last few months, we’ve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we’ve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We’ve improved control over the model’s responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we’ve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we’re now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do — not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we’re also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We’re announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we’ve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind’s mission to build AI responsibly to benefit humanity, we’ve always wanted to develop universal AI agents that can be helpful in everyday life. That’s why today, we’re sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do — and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we’ve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we’ve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we’ve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they’re being used in, and respond quickly, in conversation.With technology like this, it’s easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We’ve made incredible progress so far with our family of Gemini models, and we’re always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we’re able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google’s privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let’s stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Kornai (1979) Framework on Autocratic Governance</title><link href="https://herbertwxin.github.io/blog/2024/konai_comment/" rel="alternate" type="text/html" title="Kornai (1979) Framework on Autocratic Governance"/><published>2024-02-05T00:00:00+00:00</published><updated>2024-02-05T00:00:00+00:00</updated><id>https://herbertwxin.github.io/blog/2024/konai_comment</id><content type="html" xml:base="https://herbertwxin.github.io/blog/2024/konai_comment/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>After randomly came across Kornai’s work on <em>“Resource-Constrained versus Demand-Constrained System” (1979)</em>, I realized it idea of soft/hard budget constraint displays a very neat framework to explain why autocratic government, especially the local government, often deviates from the demand of populace.</p> <p>In Kornai’s work, he suggests that firms in socialist systems are only subject to soft budget constraints, i.e. the loss from investment does not damage the financial ability of the firm as it is owned by the state. Whereas in capitalist system, firms are immediately constrained by demands from the market, avoiding overly occupying social resources. In all circumstances, however, firms prioritize the most immediate constraint as it decides the survival of the firm. Thus, socialist firms suffer from “investment hunger”, which relentlessly push for expansion regardless of actual market demands or the efficient use of resources to maintain state support till the exhaustion of resources, creating shortages.</p> <h2 id="a-political-perspective">A Political Perspective</h2> <p>The detachment of firms from the market could certainly be undesirable. The detachment of local government from its residents, however, could raise more issues. In fact, any autocratic state should suffer from this issue more or less.</p> <p>As the nature of all autocratic system, local government officials are appointed by its superior, which means their responsibilities lies in achieving need of the superior. That need, however, does not necessary align with those from the residents. Put it into Karnai’s framework, local government in autocratic state is delimited by the by its interaction with superior, while in democratic state, it is delimited by the interaction with local resident. This is an analogous of the resource/demand constraint faced by socialist/capitalist firms. Thus, just like socialist firms have no incentive to save resources, autocratic local governments have no incentive to benefit its residents.</p> <p>This lack of incentive occurs even when the central government’s ultimate goal is to benefit the populace, as any policy relies on local government’s implementation. With its hard constraint bounded by the populace, local government has to achieve the policy in a way that is generally agreed by the resident, where autocratic local governments, who’s hard constraint is bounded by the central government, the policy can executed in any form, as long as it achieves the target.</p> <p>The aforementioned idea could be illustrated using my <strong>mushroom-shaped flowchart</strong>.</p> <p><img src="/assets/img/Mushroom.png" alt="Mushroom Flowchart"/></p> <p>As one could see from the chart, the local government has the ruling power towards the people, while its primary responsibility is not tied with the needs of people. Local government only has a secondary responsibility towards the populace, i.e. the people influence the central government, which governs the local government.</p> <p>Such detachment between local government’s responsibility and power has caused issues like the overly stringent lock-down policy during the COVID-19 era in China. The ultimate goal of the central government is to reduce the number of cases, which is certainly not wrong. However, since local government has no incentive to benefit its people, especially during such urgent event, it takes every measure at any cost to eliminate any possibility of COVID spreading, which, of course, includes killing dogs during break-in home COVID tests and leaving people that are suspect to be infected in Fangcang Hospital without any actual treatment. These measures obviously harms the welfare of general public and it does not matter as local government’s primary responsibility, the one that decides the political career of local governor, is to fulfill the goal of the superior.</p> <h2 id="conclusion">Conclusion</h2> <p>It is sad to say this, but I think in any autocratic system, where the responsibility goes upward and power goes downward, faces the same problem. It shall be the intrinsic nature of autocratic systems, a steady state that any autocratic system converge to.</p>]]></content><author><name></name></author><category term="Political"/><category term="rant"/><summary type="html"><![CDATA[A comment on Kornai (1979) where I found similarities between socialist firms and autocratic local governments]]></summary></entry><entry><title type="html">Fedora Silverblue Setup Guide</title><link href="https://herbertwxin.github.io/blog/2023/fedora_guide/" rel="alternate" type="text/html" title="Fedora Silverblue Setup Guide"/><published>2023-12-25T00:00:00+00:00</published><updated>2023-12-25T00:00:00+00:00</updated><id>https://herbertwxin.github.io/blog/2023/fedora_guide</id><content type="html" xml:base="https://herbertwxin.github.io/blog/2023/fedora_guide/"><![CDATA[<p>Feel free to contact me if you have any question with these instructions! Either through email or on the website’s GitHub repository.</p> <blockquote> <p>Many of the contents here are borrowed from <a href="https://mutschler.dev/linux/fedora-post-install/#">Willi Mutschler</a>. However, since I work with Fedora Silverblue rather than Fedora Workstation, many of the installation steps would be different due to the immutable nature of Silverblue. For that reason, I think this post would still show it’s value.</p> </blockquote> <p>The version used is Fedora Silverblue 39 at the time this post is written. Most of the softwares are probably more personal and economists-oriented.</p> <h2 id="background-info-for-silverblue">Background Info for Silverblue</h2> <p>Silverblue differs from the normal Fedora Workstation as it is immutable, meaning the system files are read-only and updates are installed as a whole. Put it more technically, <code class="language-plaintext highlighter-rouge">/</code> and <code class="language-plaintext highlighter-rouge">/usr</code> and everything below it is read-only, while stuffs under <code class="language-plaintext highlighter-rouge">/var</code> are user-changeable. For more information, please consult <a href="https://docs.fedoraproject.org/en-US/fedora-silverblue/technical-information/">Fedora Docs</a>.</p> <p>This means Silverblue needs to install applications and packages differently from Workstation, i.e. <code class="language-plaintext highlighter-rouge">dnf install</code> will not work, more specifically, there are 3 ways to do it.</p> <h3 id="flatpak">Flatpak</h3> <p>Flatpak is the predominant way to install applications, as it places each application into a sandbox, aligning with the immutable approach of the Silverblue.</p> <p>It is generally recommended to add Flathub repo to gain access to more applications, for instructions to do that, please consult <a href="https://docs.fedoraproject.org/en-US/fedora-silverblue/getting-started/">Fedora Doc</a>.</p> <h3 id="toolbox">Toolbox</h3> <p>Toolbox creates an isolated container to install packages and softwares, it is almost like a emulator of the host system, or like a self-contained system that is attached to the host system.</p> <p>To create a toolbox, you can use the command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>create toolbox <span class="nt">--container</span> <span class="o">[</span>name of container]
</code></pre></div></div> <p>After entering the toolbox</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>toolbox eneter <span class="o">[</span>name of container]
</code></pre></div></div> <p>It is possible to use the normal Fedora/RHEL command.</p> <h3 id="layering">Layering</h3> <p>Layering is against the immutable approach of the system, but, many packages benefits from layering as it is layer upon the system and has a more direct connection with the system. I would recommend only install very necessary packages using layering, like graphics card drivers etc.</p> <p>To layer a package onto the system:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm-ostree <span class="nb">install</span> <span class="o">[</span>package name]
</code></pre></div></div> <p>To uninstall a layered package:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm-ostree uninstall <span class="o">[</span>package name]
</code></pre></div></div> <h2 id="graphics">Graphics</h2> <h3 id="wayland--xorg">Wayland &amp; Xorg</h3> <p>Fedora uses Wayland as default and will depreciate Xorg gradually, but in practice the experience is quite awful if you have a Nvidia card with drivers not properly set up. However, lately advancement from Nvidia side has made Wayland quite usable, providing you installed all the drivers.</p> <h4 id="use-xorg">Use Xorg</h4> <p>By using Xorg session, I can solve most displaying issues with VSCode and Obsidian (Both installed through Flatpak). To use Xorg instead of Wayland, uncomment <code class="language-plaintext highlighter-rouge">WaylandEnable=false</code> and add <code class="language-plaintext highlighter-rouge">DefaultSession=gnome-xorg.desktop</code> to the [daemon] section of <code class="language-plaintext highlighter-rouge">/etc/gdm/custom.conf</code></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/gdm/custom.conf
<span class="c"># [daemon]</span>
<span class="c"># WaylandEnable=false</span>
<span class="c"># DefaultSession=gnome-xorg.desktop</span>

<span class="c"># Cuda libs for Xorg</span>
rpm-ostree <span class="nb">install </span>xorg-x11-drv-nvidia-cuda
rpm-ostree <span class="nb">install </span>xorg-x11-drv-nvidia-cuda-libs
</code></pre></div></div> <p>And then reboot for the change to take effect.</p> <h4 id="nvidia--wayland">Nvidia &amp; Wayland</h4> <p>To install the proprietary Nvidia driver</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rpm-ostree update

<span class="c"># Nvidia proprieatary driver</span>
rpm-ostree <span class="nb">install </span>akmod-nvidia

<span class="c"># The Nvidia proprieatary driver doesn't support VAAPI, but there is a wrapper that can bridge NVDEC/NVENC with VAAPI</span>
rpm-ostree <span class="nb">install </span>nvidia-vaapi-driver

<span class="c"># Provides more codec for video streaming</span>
rpm-ostree <span class="nb">install </span>libavcodec-freeworld
</code></pre></div></div> <p>After all the installations, follow the instruction and reboot the system</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl reboot
</code></pre></div></div> <h2 id="softwares">Softwares</h2> <h3 id="foliate">Foliate</h3> <p>I really like this handy software to read my <code class="language-plaintext highlighter-rouge">.epub</code> books, but it has some problem accessing the graphics card or some sort, resulting in the page not being able to render properly. I think the problem mostly lies with the fact of lack of permission.</p> <p>The simplest way to fix this issue is to disable GPU acceleration for Foliate, to do that.</p> <ol> <li>Install <code class="language-plaintext highlighter-rouge">Flatseal</code> either by GUI or command line</li> <li>Disable the <strong>GPU acceleration</strong> option for Foliate</li> <li>Problem fixed!</li> </ol> <p>Since <strong>Foliate</strong> is not a very demanding software, even without GPU acceleration the whole thing runs smoothly enough for me to not search for other solutions.</p> <h3 id="matlab">MATLAB</h3> <h4 id="installation">Installation</h4> <p>Always refer to the official installation guide for more info.</p> <ol> <li> <p>After the downloading the MATLAB installation file, unzip it with</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	unzip matlab_R2023b_glnxa64.zip <span class="nt">-d</span> matlab_R2023b_glnxa64
</code></pre></div> </div> </li> <li> <p>Navigate to <code class="language-plaintext highlighter-rouge">matlab_R2023b_glnxa64</code> directory and launch the installer with</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./install
</code></pre></div> </div> </li> <li> <p>Install MATLAB under <code class="language-plaintext highlighter-rouge">/var</code> directory so you have full permission, the way I do it is</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/var/home/<span class="nv">$USER</span>/bin
</code></pre></div> </div> </li> </ol> <h4 id="desktop-entry">Desktop Entry</h4> <p>Here is a reference for what you need to put in for the desktop entry</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Desktop Entry]
<span class="nv">Version</span><span class="o">=</span>1.0
<span class="nv">Type</span><span class="o">=</span>Application
<span class="nv">Terminal</span><span class="o">=</span><span class="nb">false
</span><span class="nv">Exec</span><span class="o">=</span>/var/home/<span class="nv">$USER</span>/bin/MATLAB/R2023b/bin/matlab <span class="nt">-desktop</span>
<span class="nv">Name</span><span class="o">=</span>MATLAB R2023b
<span class="nv">Icon</span><span class="o">=</span>/var/home/<span class="nv">$USER</span>/bin/MATLAB/bin/glnxa64/cef_resources/matlab_icon.png
<span class="nv">Categories</span><span class="o">=</span>Development<span class="p">;</span>Math<span class="p">;</span>Science
<span class="nv">Comment</span><span class="o">=</span>Scientific computing environment
<span class="nv">StartupNotify</span><span class="o">=</span><span class="nb">true
</span><span class="nv">StartupWMClass</span><span class="o">=</span>sun-awt-X11-XFramePeer
<span class="nv">MimeType</span><span class="o">=</span>text/x-matlab
</code></pre></div></div> <h4 id="libraries">Libraries</h4> <p>Although <a href="https://mutschler.dev/linux/fedora-post-install/#">Willi Mutschler</a> suggests that it is better to use system libraries instead of MATLAB’s shipped libraries, as it solves most issues with MATLAB. During my experiment, this is not the case as with Silverblue, MATLAB does not have the access to system level files and is unable to utilize the system libraries. Thus, there is no need to exclude the shipped packages with MATLAB, in fact, you need to copy some packages from system to MATLAB directories for Dynare to work properly, as it cannot access system level file either.</p> <h3 id="dynare">Dynare</h3> <p>Dynare needs to be compiled from source on a Fedora-based system, and the method to do it is slightly different in Silverblue.</p> <h4 id="fundamental-packages">Fundamental packages</h4> <p>In order to compile Dynare, we need to install several packages, I would recommend install these packages in a toolbox to align with the immutable approach.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>toolbox create <span class="nt">--container</span> Dynare-compile
<span class="c"># Enter the toolbox</span>
toolbox enter Dynare-compile
</code></pre></div></div> <p>Install all the packages inside this toolbox</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Minimal packages (use --disable-doc and --disable-octave flags)</span>
<span class="nb">sudo </span>dnf <span class="nb">install</span> <span class="nt">-y</span> gcc gcc-g++ gfortran boost-devel gsl-devel lapack lapack-devel matio-devel openblas openblas-devel suitesparse-devel bison flex make autoconf automake redhat-rpm-config
<span class="c"># Octave packages (use --disable-doc flag)</span>
<span class="nb">sudo </span>dnf <span class="nb">install</span> <span class="nt">-y</span> octave octave-devel octave-statistics octave-io octave-optim octave-control
<span class="c"># Documentation packages</span>
<span class="nb">sudo </span>dnf <span class="nb">install</span> <span class="nt">-y</span> texlive-scheme-minimal texlive-collection-publishers texlive-collection-latexextra texlive-collection-fontsextra texlive-collection-latexrecommended texlive-collection-science texlive-collection-plaingeneric texlive-lm python3-sphinx latexmk mathjax doxygen
</code></pre></div></div> <p>Next, compile <code class="language-plaintext highlighter-rouge">solicot</code> and <code class="language-plaintext highlighter-rouge">x13as</code>, although I am not very sure the use of <code class="language-plaintext highlighter-rouge">x13as</code> as it is not directly involved in the compiling. The code below are from <a href="https://git.dynare.org/Dynare/dynare#fedora-centos-or-rhel">Dynare compiling instruction for Fedora, CentOS or RHEL on GitLab</a>.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># compile slicot from source and put it into /home/$USER/dynare/slicot/lib/</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> /var/home/<span class="nv">$USER</span>/dynare/slicot
<span class="nb">cd</span> /var/home/<span class="nv">$USER</span>/dynare/slicot
wget https://deb.debian.org/debian/pool/main/s/slicot/slicot_5.0+20101122.orig.tar.gz
<span class="nb">tar </span>xf slicot_5.0+20101122.orig.tar.gz
<span class="nb">cd </span>slicot-5.0+20101122
make <span class="nv">FORTRAN</span><span class="o">=</span>gfortran <span class="nv">OPTS</span><span class="o">=</span><span class="s2">"-O2 -fPIC -fdefault-integer-8"</span> <span class="nv">LOADER</span><span class="o">=</span>gfortran lib
<span class="nb">mkdir</span> <span class="nt">-p</span> /var/home/<span class="nv">$USER</span>/dynare/slicot/lib
<span class="nb">cp </span>slicot.a /var/home/<span class="nv">$USER</span>/dynare/slicot/lib/libslicot64_pic.a <span class="c">#for MATLAB</span>
<span class="nb">cp </span>slicot.a /var/home/<span class="nv">$USER</span>/dynare/slicot/lib/libslicot_pic.a <span class="c">#for octave</span>

<span class="c"># compile x13as from source and put it into /usr/bin/</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> /var/home/<span class="nv">$USER</span>/dynare/x13as
<span class="nb">cd</span> /var/home/<span class="nv">$USER</span>/dynare/x13as
wget https://www2.census.gov/software/x-13arima-seats/x13as/unix-linux/program-archives/x13as_asciisrc-v1-1-b60.tar.gz
<span class="nb">tar </span>xf x13as_asciisrc-v1-1-b60.tar.gz
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|-static| |"</span> makefile.gf <span class="c"># this removes '-static' in the makefile.gf</span>
make <span class="nt">-f</span> makefile.gf <span class="nv">FFLAGS</span><span class="o">=</span><span class="s2">"-O2 -std=legacy"</span> <span class="nv">PROGRAM</span><span class="o">=</span>x13as
<span class="nb">sudo cp </span>x13as /usr/bin/
</code></pre></div></div> <h4 id="compile-dynare">Compile Dynare</h4> <p>Once the perquisite packages are sorted, we can start to compile Dynare.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /var/home/<span class="nv">$USER</span>/dynare
<span class="c"># This uses the current unstable branch</span>
git clone <span class="nt">--recurse-submodules</span> https://git.dynare.org/dynare/dynare.git unstable
<span class="nb">cd </span>unstable
<span class="c"># Direct Dynare to your MATLAB path</span>
meson setup <span class="nt">-Dmatlab_path</span><span class="o">=</span>/var/home/<span class="nv">$USER</span>/bin/MATLAB <span class="nt">-Dfortran_args</span><span class="o">=</span><span class="s2">"[ '-B', '/var/home/</span><span class="nv">$USER</span><span class="s2">/dynare/slicot/lib']"</span> <span class="nt">-Dbuildtype</span><span class="o">=</span>debugoptimized build-matlab
meson compile <span class="nt">-C</span> build-matlab
ninja <span class="nt">-C</span> build-matlab
meson <span class="nb">install</span> <span class="nt">-C</span> build-matlab
</code></pre></div></div> <p>These steps shall give you a nearly workable Dynare, expect now it needs the latest <code class="language-plaintext highlighter-rouge">libstdc++.so.6</code> and <code class="language-plaintext highlighter-rouge">libstdc++.so.6.0.32</code> packages shipped with the system. As I mentioned before, Silverblue makes MATLAB lack the access to use the system shipped packages, rather, we have to rely on those shipped with MATLAB.</p> <p>To do this, we first move the <code class="language-plaintext highlighter-rouge">libstdc++.so.6</code> and <code class="language-plaintext highlighter-rouge">libstdc++.so.6.0.32</code> packages came with MATLAB to an exclude folder and the copy-paste the one from our system into MATLAB.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">MATLAB_ROOT</span><span class="o">=</span>/var/home/<span class="nv">$USER</span>/bin/MATLAB
<span class="nb">cd</span> /var/home/<span class="nv">$USER</span>/bin/MATLAB/sys/os/glnxa64
<span class="nb">mkdir</span> <span class="nt">-p</span> exclude
<span class="nb">mv </span>libstdc++<span class="k">*</span> exclude/
<span class="nb">cd</span> /lib64
<span class="nb">cp </span>libstdc++.so.6 /var/home/<span class="nv">$USER</span>/bin/MATLAB/sys/os/glnxa64
<span class="nb">cp </span>libstdc++.so.6.0.32 /var/home/<span class="nv">$USER</span>/bin/MATLAB/sys/os/glnxa64
</code></pre></div></div> <p>This should give you a running Dynare, simply add Dynare into the directory in MATLAB after.</p> <h3 id="latex">LaTeX</h3> <p>I use LaTeX with VSCode for all my writings, but to use this combo is a bit harder in Silverblue. My approach is to install LaTeX in a toolbox and then let VSCode (and LaTeX Workshop) communicate with LaTeX stored inside the toolbox.</p> <h4 id="install-tex-live">Install TeX Live</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Create the LaTeX container</span>
toolbox create <span class="nt">--container</span> LaTeX
toolbox enter LaTeX

<span class="c"># Add the Tex Live repository if needed</span>
<span class="nb">sudo </span>dnf config-manager <span class="nt">--add-repo</span> https://mirrors.tuna.tsinghua.edu.cn/texlive/fedora/

<span class="c"># Instal the package</span>
<span class="nb">sudo </span>dnf <span class="nb">install </span>texlive texlive-scheme-full texlive-extra-utils

<span class="c"># Update the packages</span>
<span class="nb">sudo </span>dnf update texlive<span class="k">*</span>

<span class="c"># Verify the installation</span>
tex <span class="nt">--version</span>
</code></pre></div></div> <h4 id="vscode-and-latex-workshop-extension">VSCode and LaTeX Workshop extension</h4> <p>Simply use the flatpak to install VSCode, the community maintained version works fine for me, or you could work a way to install the official one by layering or through toolbox.</p> <p>After installing VSCode, use the extension shop to install LaTeX Workshop extension.</p> <p>Once LaTeX Workshop is install, we need to configure it so that it can communicate with LaTeX in the toolbox, for that, we need to edit the <code class="language-plaintext highlighter-rouge">settings.json</code> of VSCode</p> <p>Change the corresponding entries in the <code class="language-plaintext highlighter-rouge">settings.json</code> to be</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">//</span><span class="w"> </span><span class="err">Only</span><span class="w"> </span><span class="err">if</span><span class="w"> </span><span class="err">you</span><span class="w"> </span><span class="err">use</span><span class="w"> </span><span class="err">LaTeX</span><span class="w"> </span><span class="err">Utilities</span><span class="w"> </span><span class="err">extension</span><span class="w"> </span><span class="err">for</span><span class="w"> </span><span class="err">word</span><span class="w"> </span><span class="err">count</span><span class="w"> </span><span class="err">etc.</span><span class="w">
</span><span class="nl">"latex-utilities.countWord.path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="err">,</span><span class="w">
</span><span class="nl">"latex-utilities.countWord.args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w"> </span><span class="s2">"run"</span><span class="p">,</span><span class="w"> </span><span class="s2">"--container"</span><span class="p">,</span><span class="w"> </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w"> </span><span class="s2">"texcount"</span><span class="p">]</span><span class="err">,</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">Required</span><span class="w"> </span><span class="err">for</span><span class="w"> </span><span class="err">LaTeX</span><span class="w"> </span><span class="err">Workshop</span><span class="w">
</span><span class="nl">"latex-workshop.latex.tools"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"latexmk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"latexmk"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-synctex=1"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-interaction=nonstopmode"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-file-line-error"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-pdf"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-outdir=%OUTDIR%"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"lualatexmk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"latexmk"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-synctex=1"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-interaction=nonstopmode"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-file-line-error"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-lualatex"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-outdir=%OUTDIR%"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"xelatexmk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"latexmk"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-synctex=1"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-interaction=nonstopmode"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-file-line-error"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-xelatex"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-outdir=%OUTDIR%"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"latexmk_rconly"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"latexmk"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"%DOC%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"pdflatex"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"pdflatex"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-synctex=1"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-interaction=nonstopmode"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-file-line-error"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"bibtex"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"bibtex"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOCFILE%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rnw2tex"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"Rscript"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-e"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"jnw2tex"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"julia"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-e"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"using Weave; weave(</span><span class="se">\"</span><span class="s2">%DOC_EXT%</span><span class="se">\"</span><span class="s2">, doctype=</span><span class="se">\"</span><span class="s2">tex</span><span class="se">\"</span><span class="s2">)"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"jnw2texminted"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"julia"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-e"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"using Weave; weave(</span><span class="se">\"</span><span class="s2">%DOC_EXT%</span><span class="se">\"</span><span class="s2">, doctype=</span><span class="se">\"</span><span class="s2">texminted</span><span class="se">\"</span><span class="s2">)"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"pnw2tex"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spaFeel free to contact me if you have any question with these instructions!wn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"pweave"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-f"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"tex"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC_EXT%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"pnw2texminted"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"pweave"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"-f"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"texminted"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC_EXT%"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"tectonic"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"tectonic"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--synctex"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"--keep-logs"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"%DOC%.tex"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"env"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="err">,</span><span class="w">
    </span><span class="nl">"latex-workshop.linting.chktex.enabled"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="err">,</span><span class="w">
    </span><span class="nl">"latex-workshop.linting.chktex.exec.path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"host-spawn"</span><span class="err">,</span><span class="w">
    </span><span class="nl">"latex-workshop.linting.chktex.exec.args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="s2">"toolbox"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"run"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"--container"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"LaTeX"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"chktex"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"-wall"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"-n22"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"-n30"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"-e16"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"-q"</span><span class="w">
    </span><span class="p">]</span><span class="err">,</span><span class="w">
</span></code></pre></div></div> <p>This would allow LaTeX Workshop to communicate with LaTeX.</p>]]></content><author><name></name></author><category term="Guide"/><category term="Fedora,"/><category term="Linux"/><summary type="html"><![CDATA[Here are some steps I would take after installing Fedora Silverblue]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://herbertwxin.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://herbertwxin.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://herbertwxin.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[<h3>External Posts on Your al-folio Blog</h3> <p>If you prefer publishing blog posts on medium.com or other external sources, starting version v0.5.0, <a href="https://github.com/alshedivat/al-folio">al-folio</a> lets you to display your external posts in the blog feed of your website! 🎉🎉</p> <p>Configuring external sources of super simple. After upgrading to v0.5.0, just add the following section to your _config.yml:</p> <pre>external_sources:<br />  - name: medium.com  # name of the source (arbitrary string)<br />    rss_url: <a href="https://medium.com/@al-folio/feed">https://medium.com/@&lt;your-medium-username&gt;/feed</a></pre> <p>The example above adds your medium.com blog post feed as an external source. But you can add arbitrary RSS feeds as sources.</p> <p>Any questions or suggestions? 👉 Start <a href="https://github.com/alshedivat/al-folio/discussions">a discussion on GitHub</a>!</p> <p><img src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b60a1d241a0a" width="1" height="1" alt=""/></p>]]></content><author><name></name></author></entry></feed>